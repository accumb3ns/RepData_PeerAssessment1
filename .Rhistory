}
fileUrl<- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileurl, destfile = "./UCI smartphone data/UCIdata.zip")
download.file(fileUrl, destfile = "./UCI smartphone data/UCIdata.zip")
download.file(fileUrl, destfile = "./UCIdata/UCIdata.zip")
unzip("./UCIdata/UCIdata.zip")
list.files("./UCIdata")
getwd()
unzip("./UCIdata/UCIdata.zip", exdir = "./UCIdata")
list.files("./UCIdata")
subject_train<- read.delim("./UCIdata/UCI HAR Dataset/train/subject_train.txt", stringsAsFactors = FALSE)
View(subject_train)
x_train<- read.delim("./UCIdata/UCI HAR Dataset/train/X_train.txt", stringsAsFactors = FALSE)
View(x_train)
x_train<- read.table(file = "./UCIdata/UCI HAR Dataset/train/X_train.txt", sep = " ", stringsAsFactors = FALSE)
x_train<- read.table(file = "./UCIdata/UCI HAR Dataset/train/X_train.txt", sep = "", stringsAsFactors = FALSE)
Y_train<- read.table(file = "./UCIdata/UCI HAR Dataset/train/Y_train.txt", sep = "", stringsAsFactors = FALSE)
View(Y_train)
features<- read.table(file = "./UCIdata/UCI HAR Dataset/train/Y_train.txt", sep = "", stringsAsFactors = FALSE)
features<- read.table(file = "./UCIdata/UCI HAR Dataset/features.txt", sep = "", stringsAsFactors = FALSE)
View(features)
View(x_train)
colnames(x_train)<-features[,2]
View(x_train)
y_train<- read.table(file = "./UCIdata/UCI HAR Dataset/train/Y_train.txt", sep = "", stringsAsFactors = FALSE)
rm(Y_train)
rownames(x_train)<-Y_train[,1]
rownames(x_train)<-y_train[,1]
dataset<-cbind(y_train,x_train)
View(dataset)
library(dplyr)
x_test<- read.table(file = "./UCIdata/UCI HAR Dataset/test/X_test.txt", sep = "", stringsAsFactors = FALSE)
y_test<- read.table(file = "./UCIdata/UCI HAR Dataset/test/Y_test.txt", sep = "", stringsAsFactors = FALSE)
rm(dataset)
colnames(y_test)<-c("Activity")
View(y_test)
colnames(y_train)<-c("Activity")
testData<-cbind(y_train,x_train)
testData<-cbind(y_test,x_test)
trainData<-cbind(y_train,x_train)
View(features)
ColumnLabels<-c("Activity",features[,2])
mergedData<-rbind(testData,trainData)
View(y_train)
View(x_train)
x_train<- read.table(file = "./UCIdata/UCI HAR Dataset/train/X_train.txt", sep = "", stringsAsFactors = FALSE)
trainData<-cbind(y_train,x_train)
View(trainData)
View(testData)
rm(list=ls())
x_train<- read.table(file = "./UCIdata/UCI HAR Dataset/train/X_train.txt", sep = "", stringsAsFactors = FALSE)
y_train<- read.table(file = "./UCIdata/UCI HAR Dataset/train/Y_train.txt", sep = "", stringsAsFactors = FALSE)
x_test<- read.table(file = "./UCIdata/UCI HAR Dataset/test/X_test.txt", sep = "", stringsAsFactors = FALSE)
y_test<- read.table(file = "./UCIdata/UCI HAR Dataset/test/Y_test.txt", sep = "", stringsAsFactors = FALSE)
features<- read.table(file = "./UCIdata/UCI HAR Dataset/features.txt", sep = "", stringsAsFactors = FALSE)
testData<-cbind(y_test,x_test)
trainData<-cbind(y_train,x_train)
mergedData<-rbind(testData,trainData)
View(mergedData)
colnames(mergedData<-c("Activity",features[,2])
colnames(mergedData)<-c("Activity",features[,2])
View(mergedData)
rm(list=ls())
x_train <- read.table(file = "./UCIdata/UCI HAR Dataset/train/X_train.txt", sep = "", stringsAsFactors = FALSE)
y_train <- read.table(file = "./UCIdata/UCI HAR Dataset/train/Y_train.txt", sep = "", stringsAsFactors = FALSE)
subject_train <- read.table(file = "./UCIdata/UCI HAR Dataset/train/subject_train.txt", sep = "", stringsAsFactors = FALSE)
x_test <- read.table(file = "./UCIdata/UCI HAR Dataset/test/X_test.txt", sep = "", stringsAsFactors = FALSE)
y_test <- read.table(file = "./UCIdata/UCI HAR Dataset/test/Y_test.txt", sep = "", stringsAsFactors = FALSE)
subject_test <- read.table(file = "./UCIdata/UCI HAR Dataset/test/subject_test.txt", sep = "", stringsAsFactors = FALSE)
View(subject_test)
testData<-cbind(y_test,x_test)
trainData<-cbind(y_train,x_train)
testData <- cbind(subject_test, testData)
trainData <- cbind(subject_train, trainData)
View(testData)
mergedData<-rbind(testData,trainData)
colnames(mergedData)<-c("Subject", "Activity",features[,2])
features<- read.table(file = "./UCIdata/UCI HAR Dataset/features.txt", sep = "", stringsAsFactors = FALSE)
colnames(mergedData)<-c("Subject", "Activity",features[,2])
View(mergedData)
rm(features, subject_test, subject_train, testData, trainData, x_test, x_train, y_test, y_train)
View(mergedData)
selected_columns<- select(mergedData, contains("mean") | contains("std"))
selected_columns<- select(mergedData, contains("mean")
)
valid_column_names <- make.names(names=features[,2], unique=TRUE, allow_ = TRUE)
features<- read.table(file = "./UCIdata/UCI HAR Dataset/features.txt", sep = "", stringsAsFactors = FALSE)
valid_column_names <- make.names(names=features[,2], unique=TRUE, allow_ = TRUE)
colnames(mergedData)<-c("Subject", "Activity", valid_column_names)
View(mergedData)
selected_columns<- select(mergedData, contains("mean"|"std"))
selected_columns<- select(mergedData, Subject, Activity, contains("mean"), contains("std"))
View(selected_columns)
selected_columns<- select(mergedData, Subject, Activity, contains(""mean\\(\\)"), contains("std"))
selected_columns<- select(mergedData, Subject, Activity, contains("mean\\(\\)"), contains("std"))
selected_columns<- select(mergedData, contains("mean\\(\\)"), contains("std"))
selected_columns<- select(mergedData, -!contains("mean\\(\\)"), -!contains("std"))
selected_columns<- select(mergedData, "Subject", "Activity", contains("mean\\(\\)"), contains("std"))
selected_columns<- select(mergedData, Subject, Activity, contains("mean\\(\\)"), contains("std"))
View(selected_columns)
colnames(selected_columns)
selected_columns<- select(mergedData, Subject, Activity)
View(selected_columns)
selected_columns<- select(mergedData, Subject, Activity, contains("mean\\(\\)"))
View(selected_columns)
selected_columns<- select(mergedData, Subject, Activity, contains("mean\\(\\)"))
selected_columns<- select(mergedData, contains("mean\\(\\)"))
selected_columns<- select(mergedData, Subject, Activity, contains("mean\\(\\)"), contains("std"))
View(selected_columns)
selected_columns<- select(mergedData, Subject, Activity, matches(".mean\\(\\).")
)
View(mergedData)
View(selected_columns)
selected_columns<- select(mergedData, Subject, Activity, matches(".mean\\(\\).")
)
selected_columns<- select(mergedData, Subject, Activity, contains("mean\\(\\)"), contains("std"))
View(selected_columns)
selected_columns<- select(mergedData, Subject, Activity, contains("mean()"), contains("std"))
View(selected_columns)
View(selected_columns)
selected_columns<- select(mergedData, Subject, Activity, contains("mean"), contains("std"))
colnames(selected_columns)
selected_columns<- select(mergedData, Subject, Activity, contains(".mean."), contains("std"))
View(selected_columns)
View(selected_columns)
View(selected_columns)
activity_labels<- read.table(file = "./UCIdata/UCI HAR Dataset/activity_labels.txt", sep = "", stringsAsFactors = FALSE)
View(activity_labels)
## download file after checking if it or the directory already exist
destfile <- "./ExpDataAnalysis/ExpData.zip"
fileUrl<- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
if (!file.exists(destfile)) {
if(!file.exists("ExpDataAnalysis")){
dir.create("ExpDataAnalysis")
}
download.file(fileUrl, destfile)
}
unzip("./ExpDataAnalysis/ExpData.zip", exdir = "./ExpDataAnalysis")
getwd()
power<-read.csv2(destfile)
View(power)
power<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = TRUE, stringsAsFactors = FALSE)
View(power)
library(dplyr)
?match
str(power)
power$Date <- as.Date(power$Date, "%d/%m/%y")
?strptime
power<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = TRUE, stringsAsFactors = FALSE)
power$Date <- as.Date(power$Date, "%d/%m/%Y")
desired.date<-as.Date.POSIXlt("2007-02-01")
desired.date<-as.Date("2007-02-01")
str(desired.date)
desired.enddate <- as.Date("2007-02-03")
match(desired.date,power$Date)
match(desired.enddate,power$Date)
power.header<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = TRUE, nrows = 1, stringsAsFactors = FALSE)
View(power.header)
rm(power.header)
View(power)
69517 - 66637
power<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = TRUE, skip = 66635, nrows = 2880, stringsAsFactors = FALSE)
View(power)
power.header<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = TRUE, nrows = 0, stringsAsFactors = FALSE)
power.header<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = TRUE, nrows = 1, stringsAsFactors = FALSE)
View(power.header)
power<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = TRUE, skip = 66636, nrows = 2880, stringsAsFactors = FALSE)
View(power)
power<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = FALSE, skip = 66636, nrows = 2880, stringsAsFactors = FALSE)
View(power)
power<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = FALSE, skip = 66637, nrows = 2880, stringsAsFactors = FALSE)
colnames(power)<-colnames(power.header)
propertime <- strptime(power$Time, format = "%H:%M:%S")
power<-read.csv2("./ExpDataAnalysis/household_power_consumption.txt", header = FALSE, skip = 66637, nrows = 2880, stringsAsFactors = FALSE)
colnames(power)<-colnames(power.header)
propertime <- paste(power$Date, strptime(power$Time, format = "%H:%M:%S"))
propertime <- paste(power$Date, power$Time)
propertime <- as.POSIXct(strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S"))
power$date_and_time <- as.POSIXct(strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S"))
View(power)
hist(power$Global_active_power)
str(power)
hist(as.numeric(power$Global_active_power))
hist(as.numeric(power$Global_active_power), col = "red")
hist(as.numeric(power$Global_active_power), main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
source('~/Coursera/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot1.R')
plot1()
plot1()
plot(power$date_and_time, as.numeric(power$Global_active_power))
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "l")
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "l" , ylab = "Global Active Power (kilowatts)")
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "l" , ylab = "Global Active Power (kilowatts)", xlab = NULL)
title(ylab = "Global Active Power (kilowatts)")
title(ylab = "Global Active Power (kilowatts)", xlab = NULL)
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "l")
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "l" , ylab = "Global Active Power (kilowatts)", xlab = "")
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "l")
title(ylab = "Global Active Power (kilowatts)", xlab = "")
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
png(filename = "./ExpDataAnalysis/plot2.png", width = 480, height = 480)
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
dev.off()
png(filename = "plot1.png", width = 480, height = 480)
hist(as.numeric(power$Global_active_power), main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.off()
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "n")
plot(power$date_and_time, as.numeric(power$Global_active_power), type = "n", ylab = "Energy sub metering", xlab = "")
plot(power$date_and_time, as.numeric(power$Sub_metering_1), type = "n", ylab = "Energy sub metering", xlab = "")
lines(power$date_and_time, as.numeric(power$Sub_metering_1))
lines(power$date_and_time, as.numeric(power$Sub_metering_2), col = green)
lines(power$date_and_time, as.numeric(power$Sub_metering_2), col = "green)
lines(power$date_and_time, as.numeric(power$Sub_metering_2), col = "green")
lines(power$date_and_time, as.numeric(power$Sub_metering_2), col = "red")
lines(power$date_and_time, as.numeric(power$Sub_metering_3), col = "blue")
png(filename = "plot3.png", width = 480, height = 480)
plot(power$date_and_time, as.numeric(power$Sub_metering_1), type = "n", ylab = "Energy sub metering", xlab = "")
lines(power$date_and_time, as.numeric(power$Sub_metering_1))
lines(power$date_and_time, as.numeric(power$Sub_metering_2), col = "red")
lines(power$date_and_time, as.numeric(power$Sub_metering_3), col = "blue")
dev.off()
library(RTN)
source("https://bioconductor.org/biocLite.R")
biocLite("RTN")
browseVignettes("RTN")
load("C:\Users\Steven\Downloadsmus_brain_GSE10415-regulon.rda")
load("C:/Users/Steven/Downloads/mus_brain_GSE10415-regulon.rda")
library(RTN)
library(parallel)
library("data.table", lib.loc="~/R/win-library/3.3")
setwd("C:/Users/Steven/Documents/Coursera/Reproducible Research/RepData_PeerAssessment1")
library(dplyr)
unzip("activity.zip", exdir = "./RepData_PeerAssessment1")
unzip("activity.zip")
activity <- read.csv(activity.csv)
activity <- read.csv("activity.csv")
View(activity)
activity <- read.csv("activity.csv", colClasses = c("integer", "date", "integer"))
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
View(activity)
str(activity)
hist(activity, breaks = date)
hist(activity, breaks = as.factor(date))
hist(activity$steps, breaks = as.factor(date))
activity <- activity %>% group_by(date) %>% summarize(steps, mean())
activity.summary <- activity %>% group_by(date) %>% summarize(totalsteps = sum(steps))
View(activity.summary)
activity.summary <- activity %>% group_by(date) %>% summarize(total_steps = sum(steps))
hist(activity.summary$total_steps)
hist(activity.summary$total_steps, breaks = 10)
hist(activity.summary$total_steps, breaks = 12)
hist(activity.summary$total_steps, breaks = 5)
hist(activity.summary$total_steps, breaks = 7)
hist(activity.summary$total_steps, breaks = 8)
hist(activity.summary$total_steps, breaks = 9)
hist(activity.summary$total_steps, breaks = 15)
hist(activity.summary$total_steps, breaks = 20)
hist(activity.summary$total_steps, breaks = 25)
hist(activity.summary$total_steps, breaks = 30)
hist(activity.summary$total_steps, breaks = 10)
hist(activity.summary$total_steps, breaks = seq(0,30000, by=2500))
hist(activity.summary$total_steps, breaks = seq(0,25000, by=2500))
sum(activity.summary$total_steps > 25000)
activity.summary$total_steps > 25000
hist(activity.summary$total_steps, breaks = seq(0,25000, by=2500))
hist(activity.summary$total_steps, breaks = seq(0,25000, by=2500), main = "Steps per day", xlab = "Steps")
hist(activity.summary$total_steps, breaks = seq(0,22500, by=2500), main = "Steps per day", xlab = "Steps")
hist(activity.summary$total_steps, breaks = seq(0,25000, by=2500), main = "Steps per day", xlab = "Steps")
hist(activity.summary$total_steps, breaks = seq(0,25000, by=2500), ylim = c(0,20), main = "Steps per day", xlab = "Steps")
mean_daily_steps <- mean(activity.summary$total_steps, rm.na = TRUE)
mean_daily_steps <- mean(activity.summary$total_steps, na.rm = TRUE)
hist(activity.summary$total_steps,
breaks = seq(0,25000, by=2500),
ylim = c(0,20),
main = "Steps per day",
xlab = "Steps")
mean_daily_steps <- mean(activity.summary$total_steps, na.rm = TRUE)
lines(density(activity.summary$total_steps))
lines(density(activity.summary$total_steps, na.rm=TRUE))
lines(density(activity.summary$total_steps, from = 0, to = max(activity.summary$total_steps) na.rm=TRUE))
lines(density(activity.summary$total_steps, from = 0, to = max(activity.summary$total_steps, na.rm = TRUE), na.rm=TRUE))
density(activity.summary$total_steps, from = 0, to = max(activity.summary$total_steps, na.rm = TRUE), na.rm=TRUE)
median_daily_steps <- median(activity.summary$total_steps, na.rm = TRUE)
str(median_daily_steps)
activity.summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps))
View(activity.summary)
activity.summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
View(activity.summary)
activity.summary <- activity %>%
group_by(date) %>%
summarize(total_steps = sum(steps))
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
View(interval_summary)
max_interval <- max(interval_summary$mean_steps)
max_interval <- which.max(interval_summary$mean_steps)
max_interval_index <- which.max(interval_summary$mean_steps)
max_interval <- interval_summary$interval[which.max(interval_summary$mean_steps)]
with(interval_summary, plot(interval, mean_steps, type = "l"))
with(interval_summary, plot(interval, mean_steps, type = "l", ylab ("Mean steps taken")))
with(interval_summary, plot(interval, mean_steps, type = "l", ylab =("Mean steps taken")))
with(interval_summary, plot(interval, mean_steps, type = "l", ylab = ("Mean steps taken")))
total_rows_with_NA <- sum(!complete.cases(activity))
complete.cases(activity)
total_rows_with_NA / length(activity$steps)
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
index_of_NA <- !complete.cases(activity)
total_rows_with_NA <- sum(index_of_NA)
interval_summary$steps[835/5]
interval_summary$mean_steps[835/5]
interval_summary$mean_steps[104]
interval_summary$mean_steps[(835-1)/5]
interval_summary$mean_steps[105]
interval_summary$mean_steps[104]
interval_summary$mean_steps[(835/5)]
interval_summary$mean_steps[(835)]
interval_summary$mean_steps[835]
View(interval_summary)
View(activity)
interval_summary$mean_steps[0]
interval_summary$mean_steps[1]
y=835
interval_summary$mean_steps[(y/5)+1]
interval_summary$mean_steps[(y/5)]
24*60
1440/5
835/5
View(interval_summary)
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps))
View(interval_summary)
%in%
?%in%
interval_index = seq(0,1440,by(5))
interval_index = seq(0,1440,by(5))
interval_index = seq(0,1440,by =5)
interval_index = seq(0,1435,by(5))
interval_index = seq(0,1435,by =5)
activity_imputed = cbind(activity,interval_imputed)
activity_imputed <- cbind(activity,interval_index)
View(activity_imputed)
impute_NA <- function(x,index) ifelse(is.na(x), interval_summary$steps[index/5],x)
104*5
impute_NA(NA,520)
interval_summary$steps[520/5]
View(interval_summary)
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
interval_summary$steps[520/5]
interval_summary$mean_steps[520/5]
interval_summary$mean_steps[5/5]
activity_imputed <- activity_imputed %>%
mutate(imputed_steps = impute_NA(steps,interval_index))
activity_imputed = cbind(activity,interval_index)
impute_NA <- function(x,index) ifelse(is.na(x), interval_summary$mean_steps[(index/5)+1],x)
activity_imputed <- activity_imputed %>%
mutate(imputed_steps = impute_NA(steps,interval_index))
imputed_interval_summary <- activity_imputed %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
interval_index = seq(0,1440,by(5))
interval_summary = cbind(activity,interval_index)
with(interval_summary, plot(interval_index, mean_steps, type = "l", ylab = ("Mean steps taken")))
View(interval_summary)
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
interval_summary = cbind(activity,interval_index)
with(interval_summary, plot(interval_index, mean_steps, type = "l", ylab = ("Mean steps taken")))
View(interval_summary)
View(interval_summary)
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
interval_summary = cbind(activity,interval_index)
activity <- cbind(activity,interval_index)
View(activity)
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
View(interval_summary)
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE),interval_index)
interval_summary <- activity %>%
group_by(interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE),interval_index = interval_index)
interval_summary <- activity %>%
group_by(interval,interval_index) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
View(interval_summary)
View(imputed_interval_summary)
View(imputed_interval_summary)
identical(interval_summary$mean_steps,imputed_interval_summary$mean_steps)
with(interval_summary, plot(interval_index, mean_steps, type = "l", ylab = ("Mean steps taken")))
rm(list=ls())
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
activity_summary <- activity %>%
group_by(date) %>%
summarize(total_steps = sum(steps))
hist(activity_summary$total_steps,
breaks = seq(0,25000, by=2500),
ylim = c(0,20),
main = "Steps per day",
xlab = "Steps")
mean_daily_steps <- mean(activity_summary$total_steps, na.rm = TRUE)
median_daily_steps <- median(activity_summary$total_steps, na.rm = TRUE)
proper_interval = seq(0,1440,by(5))
activity <- cbind(activity,proper_interval)
interval_summary <- activity %>%
group_by(interval,proper_interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
proper_interval = seq(0,1440,by = 5))
proper_interval = seq(0,1440,by = 5)
activity <- cbind(activity,proper_interval)
interval_summary <- activity %>%
group_by(interval,proper_interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
activity <- cbind(activity,proper_interval)
activity <- cbind(as.tbl(activity),proper_interval)
proper_interval = seq(0,1435,by = 5)
activity <- cbind(activity,proper_interval)
View(activity)
interval_summary <- activity %>%
group_by(interval,proper_interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
View(interval_summary)
with(interval_summary, plot(proper_interval, mean_steps, type = "l", ylab = ("Mean steps taken")))
max_original_interval <- interval_summary$interval[which.max(interval_summary$mean_steps)]
total_rows_with_NA <- sum(!complete.cases(activity))
impute_NA <- function(x,interval) ifelse(is.na(x), interval_summary$mean_steps[(interval/5)+1],x)
activity_imputed <- activity_imputed %>%
mutate(imputed_steps = impute_NA(steps,proper_interval))
activity_imputed <- activity %>%
activity_imputed <- activity %>%
mutate(imputed_steps = impute_NA(steps,proper_interval))
View(activity_imputed)
[which.max(interval_summary$mean_steps)]
max_proper_interval <- interval_summary$proper_interval[which.max(interval_summary$mean_steps)]
View(interval_summary)
impute_NA <- function(x,proper_interval) ifelse(is.na(x), interval_summary$mean_steps[(proper_interval/5)+1],x)
activity_imputed <- activity %>%
mutate(imputed_steps = impute_NA(steps,proper_interval))
View(interval_summary)
library("lattice", lib.loc="C:/Program Files/R/R-3.3.1/library")
activity_imputed$part_of_week <- weekdays(activity_imputed$date)
View(activity_imputed)
str(activity_imputed)
x <- activity_imputed$part_of_week
if(x == "Saturday" | x == "Sunday")
x == "Saturday" | x == "Sunday"
as.factor(x == "Saturday" | x == "Sunday", levels = c("Weekend","Weekday")
)
as.factor(x == "Saturday" | x == "Sunday")
as.factor(as.integer(x == "Saturday" | x == "Sunday"))
as.factor(as.integer(x == "Saturday" | x == "Sunday"), labels = c("Weekend", "Weekday"))
as.factor(as.integer(x == "Saturday" | x == "Sunday"), levels = c("Weekend", "Weekday"))
as.factor(as.integer(x == "Saturday" | x == "Sunday"), labels = c("Weekend", "Weekday"))
as.factor(as.integer(x == "Saturday" | x == "Sunday"), levels = c("Weekday", "Weekend"))
c("Weekend", "Weekday")
labels = c("Weekend", "Weekday")
as.integer(x == "Saturday" | x == "Sunday")
week_vs_weekend_summary <- activity_imputed %>%
mutate(part_of_week = is_weekend_day(day_of_week)) %>%
group_by(part_of_week,proper_interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
activity_imputed$day_of_week <- weekdays(activity_imputed$date)
is_weekend_day <- function(x) as.integer(x == "Saturday" | x == "Sunday")
week_vs_weekend_summary <- activity_imputed %>%
mutate(part_of_week = is_weekend_day(day_of_week)) %>%
group_by(part_of_week,proper_interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
View(week_vs_weekend_summary)
week_vs_weekend_summary$part_of_week <- as.factor(week_vs_weekend_summary$part_of_week, labels = c("Weekday", "Weekend"))
View(week_vs_weekend_summary)
week_vs_weekend_summary$part_of_week <- as.factor(week_vs_weekend_summary$part_of_week, levels = c("Weekday", "Weekend"))
View(week_vs_weekend_summary)
week_vs_weekend_summary$part_of_week <- factor(week_vs_weekend_summary$part_of_week, levels = c("Weekday", "Weekend"))
View(week_vs_weekend_summary)
week_vs_weekend_summary <- activity_imputed %>%
mutate(part_of_week = is_weekend_day(day_of_week)) %>%
group_by(part_of_week,proper_interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
week_vs_weekend_summary$part_of_week <- factor(week_vs_weekend_summary$part_of_week, labels = c("Weekday", "Weekend"))
activity_imputed$day_of_week <- weekdays(activity_imputed$date)
is_weekend_day <- function(x) factor(as.integer(x == "Saturday" | x == "Sunday"), labels = c("Weekday", "Weekend"))
week_vs_weekend_summary <- activity_imputed %>%
mutate(part_of_week = is_weekend_day(day_of_week)) %>%
group_by(part_of_week,proper_interval) %>%
summarize(mean_steps = mean(steps, na.rm = TRUE))
View(week_vs_weekend_summary)
activity_imputed <- activity_imputed %>% mutate(part_of_week = is_weekend_day(day_of_week))
str(week_vs_weekend_summary)
xyplot(proper_interval ~ mean_steps | part_of_week, week_vs_weekend_summary)
xyplot(mean_steps ~ proper_interval | part_of_week, week_vs_weekend_summary)
xyplot(mean_steps ~ proper_interval | part_of_week, week_vs_weekend_summary, type = "l")
xyplot(mean_steps ~ proper_interval | part_of_week, week_vs_weekend_summary, type = "l", layout = c(1,2))
xyplot(mean_steps ~ proper_interval | part_of_week, week_vs_weekend_summary, type = "l", layout = c(1,2), ylab = "Mean Steps")
xyplot(mean_steps ~ proper_interval | part_of_week, week_vs_weekend_summary, type = "l", layout = c(1,2), ylab = "Mean Number Steps")
xyplot(mean_steps ~ proper_interval | part_of_week, week_vs_weekend_summary, type = "l", layout = c(1,2), ylab = "Mean Number of Steps")
xyplot(mean_steps ~ proper_interval | part_of_week, week_vs_weekend_summary, type = "l", layout = c(1,2), xlab = "5 minute interval", ylab = "Mean Number of Steps")
